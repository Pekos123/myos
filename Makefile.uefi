CROSS_COMPILE ?= x86_64-elf-
CC      := $(CROSS_COMPILE)gcc
LD      := $(CROSS_COMPILE)ld
OBJCOPY := $(CROSS_COMPILE)objcopy

SRCDIR  := src
OBJDIR  := obj
BINDIR  := bin

SOURCES := $(wildcard $(SRCDIR)/*.c)
OBJECTS := $(patsubst $(SRCDIR)/%.c,$(OBJDIR)/%.o,$(SOURCES))

LDSCRIPT := kernel.ld

CFLAGS := -std=gnu11 -O2 -ffreestanding -fno-builtin -fno-stack-protector -Iinclude -mno-red-zone
# Use ld's --gc-sections option directly (no -Wl,...)
LDFLAGS := -nostdlib -static -T $(LDSCRIPT) --gc-sections

.PHONY: all clean dirs

all: dirs $(BINDIR)/kernel.bin

$(OBJDIR)/%.o: $(SRCDIR)/%.c | $(OBJDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(BINDIR)/kernel.elf: $(OBJECTS) | $(BINDIR)
	$(LD) $(LDFLAGS) -o $@ $(OBJECTS)

$(BINDIR)/kernel.bin: $(BINDIR)/kernel.elf
	$(OBJCOPY) -O binary $< $@

$(OBJDIR):
	mkdir -p $(OBJDIR)

$(BINDIR):
	mkdir -p $(BINDIR)

dirs: $(OBJDIR) $(BINDIR)

clean:
	rm -rf $(OBJDIR) $(BINDIR)
